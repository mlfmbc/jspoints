var list=[];
var points=[
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0]
];
var count =points.length;
var maxRandom = 4;
var randomNum = 0;
for (var i=0;i<count;i++){
    for(var j=0;j<points[i].length;j++){
        randomNum = Math.ceil(Math.random()*maxRandom);
        point=new Object();
        point.x=i;
        point.y=j;
        point.num=randomNum;
        list.push(point);
        points[i][j]=list.length-1;
    }
    var line='';
    for(var m=0;m<count;m++){
        if(m==count-1){
            line=line+(list[points[i][m]].num)+""
        }else {
            line=line+(list[points[i][m]].num)+"--"
        }
    }
    console.log(line);
}
console.log("-------------------华丽的分割线-----------------");
console.log(">>>>>>>>>>>>>"+(getPointAngle(vec(0,0),vec(1,1),vec(1,2))));
console.log(">>>>>>>>>>>>>"+(getPointAngle(vec(0,0),vec(1,1),vec(2,1))));
console.log(">>>>>>>>>>>>>"+(getPointAngle(vec(0,0),vec(1,1),vec(2,2))));
console.log(">>>>>>>>>>>>>"+(getPointAngle(vec(0,0),vec(1,1),vec(0,2))));
console.log(">>>>>>>>>>>>>"+(getPointAngle(vec(0,0),vec(1,1),vec(0,1))));
console.log(">>>>>>>>>>>>>"+(getPointAngle(vec(0,0),vec(1,1),vec(1,0))));
console.log(">>>>>>>>>>>>>"+(getPointAngle(vec(0,0),vec(1,1),vec(2,0))));
// 连续三个点的坐标
function getPointAngle(point1,point2,point3) {
    return getAngle(vec(point2.x-point1.x,point2.y-point1.y),vec(point2.x-point3.x,point2.y-point3.y));
}
function getAngle(vec1,vec2) {
    var cos=(vec1.x*vec2.x+vec1.y*vec2.y)/(Math.sqrt(vec1.x*vec1.x+vec1.y*vec1.y)*Math.sqrt(vec2.x*vec2.x+vec2.y*vec2.y));
    var Angle=Math.acos(cos);
    return Math.round(Angle*180/Math.PI);
}
function vec(x,y) {
    v=new Object();
    v.x=x;
    v.y=y;
    return v;
}